#!/usr/bin/env bash

# Author: Zhang Huangbin (zhb@iredmail.org)

### BEGIN INIT INFO
# Provides:          iredapd 
# Required-Start:    $network $syslog
# Required-Stop:     $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Control iredapd daemon.
# Description: Control iredapd daemon.
### END INIT INFO

PROG='iredapd'
BINPATH='/opt/iredapd/iredapd.py'
#DELCACHE='/opt/iredapd/delete_cache.py'
PIDFILE='/var/run/iredapd.pid'

check_status() {
    # Usage: check_status pid_number
    PID="${1}"
    l=$(ps -p ${PID} | wc -l | awk '{print $1}')
    if [ X"$l" == X"2" ]; then
        echo "running"
    else
        echo "stopped"
    fi
}

start() {
    if [ -f ${PIDFILE} ]; then
        PID="$(cat ${PIDFILE})"
        s="$(check_status ${PID})"

        if [ X"$s" == X"running" ]; then
            echo "${PROG} is already running."
        else
            rm -f ${PIDFILE} >/dev/null 2>&1
        fi
    fi

#    echo "Deleting Iredapd cache ..."
#    python ${DELCACHE}

    echo "Starting ${PROG} ..."
    python ${BINPATH}
    unset s
}

stop() {
    if [ -f ${PIDFILE} ]; then
        PID="$(cat ${PIDFILE})"
        s="$(check_status ${PID})"

        if [ X"$s" == X"running" ]; then
            echo "Stopping ${PROG} ..."
            kill -9 ${PID}
            if [ X"$?" == X"0" ]; then
                rm -f ${PIDFILE} >/dev/null 2>&1
            else
                echo -e "\t\t[ FAILED ]"
            fi
        else
            echo "${PROG} is already stopped."
            rm -f ${PIDFILE} >/dev/null 2>&1
        fi
    else
        echo "${PROG} is already stopped."
    fi
    python ${DELCACHE}
    unset s
}

status() {
    if [ -f ${PIDFILE} ]; then
        PID="$(cat ${PIDFILE})"
        s="$(check_status ${PID})"

        if [ X"$s" == X"running" ]; then
            echo "${PROG} is running."
            exit 0
        else
            echo "${PROG} is stopped."
            exit 1
        fi
    else
        echo "${PROG} is stopped."
        exit 3
    fi
}

case "$1" in
    start) start ;;
    stop) stop ;;
    status) status ;;
    restart) stop && start ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        RETVAL=1
        ;;
esac

